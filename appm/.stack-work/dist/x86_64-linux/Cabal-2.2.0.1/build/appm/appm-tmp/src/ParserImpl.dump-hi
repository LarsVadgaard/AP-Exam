
==================== FINAL INTERFACE ====================
2018-11-05 01:23:54.942101925 UTC

interface main:ParserImpl 8043
  interface hash: be9fe4c4b1f1990f9b1964cce8a8a223
  ABI hash: cdda3b3c1aea4bce55183a130a93b533
  export-list hash: ef23c93533aa4b08a92c474f41d46fb1
  orphan hash: 426d8f0940c9e71d7bc17833621b698b
  flag hash: 8159db7c32bdb9b5583c3379f950f8b0
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  ParserImpl.bound
  ParserImpl.bounds
  ParserImpl.braces
  ParserImpl.checkClauses
  ParserImpl.checkDeps
  ParserImpl.clause
  ParserImpl.cmt
  ParserImpl.constr
  ParserImpl.countClause
  ParserImpl.database
  ParserImpl.genAction
  ParserImpl.keyword
  ParserImpl.package
  ParserImpl.parens
  ParserImpl.parseDatabase
  ParserImpl.parseVersion
  ParserImpl.pname
  ParserImpl.pname'
  ParserImpl.quots
  ParserImpl.spaces
  ParserImpl.spaces1
  ParserImpl.str
  ParserImpl.suffix
  ParserImpl.symbol
  ParserImpl.symbol1
  ParserImpl.token
  ParserImpl.token1
  ParserImpl.version
  ParserImpl.vnum
  ParserImpl.Clause{ParserImpl.Constraints ParserImpl.Desc ParserImpl.Name ParserImpl.Version}
module dependencies: Defs Utils
package dependencies: array-0.5.2.0 base-4.11.1.0* binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0*
                      text-1.2.3.0 transformers-0.5.5.0
orphans: text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Char 3e89818e2b8ef1a2cc5393163484da72
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:GHC.Unicode 8234c40b59f035e845832a42e8725a00
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:Text.Read 6c02630607b565ffcb34e8127673989b
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Defs d68c6b51a0680ceeccb798bbdf84422d
  exports: 5ff9e865f120cee4a14d24bffcee71a0
  Constrs 9a7c3453c9d2e31f7e4903b75f608e72
  DB 0ef6550e66dade1302bb59d02ca19238
  Database f1583a426d94974bff3b76eacb5d8923
  ErrMsg 832e4b49f39f830e3fa7575301a38b17
  P 3b8a4dd02ce9b005a82194f2bda4ad98
  PName f57ad031236d47377cee1c770af63619
  Pkg 839c6c90d5fd4e1351a82e3ec586a212
  Pkg 67c0e1532f060e36c08615a4e1246c25
  V dd84a0012c2a5b84d62583b937630e69
  VN f7cf0c87bc1dda4e1a385fad45561518
  VNum 357a140a7e8d240bdb378f37a89369a9
  Version dac81863e92b466ccdd232182575e76a
  deps 67c0e1532f060e36c08615a4e1246c25
  desc 67c0e1532f060e36c08615a4e1246c25
  maxV d5f2cbf233e4375ee4d69ae54cb88f02
  minV 0eb6d2a314d21c7ed6107406103873f1
  name 67c0e1532f060e36c08615a4e1246c25
  stdV 3d3bc43a34c6afc23fb239002cc8357f
  ver 67c0e1532f060e36c08615a4e1246c25
import  -/  Utils 4f98c61aa38838f38e3d1e041c1d0979
  exports: 1b834eb832ec9a3ae541398e0df3efef
  merge c9d74a5272b0f05d443491f30ba98a54
import  -/  parsec-3.1.13.0:Text.Parsec.Char ba652f10f2db2d657f224e91ed53fce9
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator 867c44e0e488ef24ec5bd4da95f91de9
import  -/  parsec-3.1.13.0:Text.Parsec.Error 5c35aa426bd1cd52bcab90d9a1e3ce4c
import  -/  parsec-3.1.13.0:Text.Parsec.Prim 48929b84b5d30b299edcfed21f9bf40e
import  -/  parsec-3.1.13.0:Text.Parsec.String 2197da5d25a401744ce266b9d6355c6b
41d611ede7ccf81e9de61b3183d619d2
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (ParserImpl.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
1f40ade375dddb86055de657b6120873
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Base.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Base.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R)) }) -}
f68bdb43a4d7b0cbbf83836e4c62dbbc
  $tc'Constraints :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9424008242955378422##
                   5128898680646789356##
                   ParserImpl.$trModule
                   ParserImpl.$tc'Constraints2
                   0#
                   ParserImpl.$tc'Constraints1) -}
5d5ea5a688889af3cbafb4c49a258be2
  $tc'Constraints1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f1445f019726b8e5847a4b758b07a883
  $tc'Constraints2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'Constraints3) -}
9f607fd7ebe87321c21ac70e19c93b22
  $tc'Constraints3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Constraints"#) -}
907dee5f17d4b3da9caa8564062f4a9f
  $tc'Desc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17416825293843794162##
                   8075752859809820213##
                   ParserImpl.$trModule
                   ParserImpl.$tc'Desc2
                   0#
                   ParserImpl.$tc'Desc1) -}
f143a1bb6c25f3e7b5596e2c0520f18c
  $tc'Desc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1762e556cc694a414ffda30769bbe158
  $tc'Desc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'Desc3) -}
26848a9542bf659eaa33a64be396d409
  $tc'Desc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Desc"#) -}
b00fae37b02e2702436fe85e96b93d2a
  $tc'Name :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9411838605641459639##
                   9548041685913527524##
                   ParserImpl.$trModule
                   ParserImpl.$tc'Name2
                   0#
                   ParserImpl.$tc'Name1) -}
c9d12c675fb2ec284e07eef1b79cb308
  $tc'Name1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
58bfdd4abf821cd445284ea33a171b7e
  $tc'Name2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'Name3) -}
57c8034aa7b7276cae30ccd9fc3b9748
  $tc'Name3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Name"#) -}
6cea861a7ec07a31485c5014d53adafa
  $tc'Version :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5897278461848278395##
                   4951109445280729371##
                   ParserImpl.$trModule
                   ParserImpl.$tc'Version2
                   0#
                   ParserImpl.$tc'Version1) -}
a182f1fb99d84d8a92ba5534b3b567b3
  $tc'Version1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a1b26d49bbb98d1f1b93d078b56675f3
  $tc'Version2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'Version3) -}
df3a170c8c3398a33c3c5eb59e472ccc
  $tc'Version3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Version"#) -}
1729cd3090c5970f64c7510afdac0cd8
  $tcClause :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   532456722731303816##
                   6464325017333771798##
                   ParserImpl.$trModule
                   ParserImpl.$tcClause1
                   0#
                   GHC.Types.krep$*) -}
91e87df7b9352322945562ae21918183
  $tcClause1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tcClause2) -}
a941553941beef12c1848db690315dcd
  $tcClause2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Clause"#) -}
d0493a6dc9f69061a9fe7bc9e3bfe456
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ParserImpl.$trModule3
                   ParserImpl.$trModule1) -}
c8db90df9add4b898b81ade138630163
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$trModule2) -}
3586a69b6ca33d8962ab1d0326242b20
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ParserImpl"#) -}
ec1195dbb04b5505bf1ebfb4d94d811f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$trModule4) -}
e83157b3e3d161a472c889c5b048af75
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d09f225f49efb014a35afe7773745500
  $wgo ::
    [ParserImpl.Clause]
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,U(U)><L,U(U)><L,U(U)>m, Inline: [0] -}
16f2c3b3ebea7aa9d2da290492468047
  $wp ::
    GHC.Base.String
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,C(U)><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: GHC.Base.String)
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: [GHC.Types.Char]
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 let {
                   lvl24 :: Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError -> Data.Functor.Identity.Identity b
                   = w ParserImpl.str_x
                 } in
                 let {
                   lvl25 :: GHC.Base.String
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (x1 :: GHC.Base.String) -> lvl24) -}
                   = \ (x1 :: GHC.Base.String) -> lvl24
                 } in
                 let {
                   ww5 :: Text.Parsec.Pos.SourcePos
                   = Text.Parsec.Pos.SourcePos ww1 ww2 ww3
                 } in
                 let {
                   ww6 :: Text.Parsec.Prim.State GHC.Base.String ()
                   = Text.Parsec.Prim.State @ GHC.Base.String @ () ww ww5 ww4
                 } in
                 Text.Parsec.Char.$wnoneOf
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.str_x
                   @ b
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: GHC.Types.Char) ->
                    w (GHC.Base.$fApplicative[]_$cpure @ GHC.Types.Char x))
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    let {
                      eerr :: Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b
                        {- Arity: 1, Strictness: <L,1*U(U(U,U,U),U)>,
                           Unfolding: InlineRule (1, True, False)
                                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                                       w2 (Text.Parsec.Error.mergeError err err')) -}
                      = \ (err' :: Text.Parsec.Error.ParseError) ->
                        w2 (Text.Parsec.Error.mergeError err err')
                    } in
                    Text.Parsec.Char.string1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                      ParserImpl.str5
                      @ b
                      ww6
                      lvl25
                      eerr
                      (\ (x1 :: GHC.Base.String)[OneShot]
                         (s' :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w1 ParserImpl.str_x s' (Text.Parsec.Error.mergeError err err'))
                      eerr)) -}
aed4b86abf797252d542c93948f7d94e
  $wpname ::
    GHC.Base.String
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (Defs.PName
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.PName
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 9,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
ab163d941534711e0917f689606836ea
  $wpname' ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,C(U)>,
     Inline: [0] -}
0ecaf9b65a84070704c8117459c4e9e8
  $wstr ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$wmany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   ParserImpl.str4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   w
                   (\ (x :: [[GHC.Types.Char]]) -> w1 (ParserImpl.str_go x))
                   w2
                   (\ (x :: [[GHC.Types.Char]]) -> w3 (ParserImpl.str_go x))) -}
8fd5ff5b43246bc61c233935eba2f621
  data Clause
    = Name Defs.PName
    | Version Defs.Version
    | Desc GHC.Base.String
    | Constraints Defs.Constrs
1d4ff5233fb779e9af5671dd8a718951
  bound ::
    GHC.Types.Bool
    -> Text.Parsec.String.Parser
         (Defs.PName, Defs.Version, Defs.Version)
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.bound1
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <(Defs.PName, Defs.Version, Defs.Version)>_R)) -}
a4fc5a830a57192736efdf9f6b1b3023
  bound1 ::
    GHC.Types.Bool
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((Defs.PName, Defs.Version, Defs.Version)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((Defs.PName, Defs.Version, Defs.Version)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
6203aea3ad9d55768f80773304e03d5c
  bounds ::
    GHC.Types.Bool
    -> Text.Parsec.String.Parser
         [(Defs.PName, Defs.Version, Defs.Version)]
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.bounds1
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <[(Defs.PName, Defs.Version, Defs.Version)]>_R)) -}
eb96c82e46b8cc2ea8e484893588ebe9
  bounds1 ::
    GHC.Types.Bool
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> ([(Defs.PName, Defs.Version, Defs.Version)]
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ([(Defs.PName, Defs.Version, Defs.Version)]
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ (b :: GHC.Types.Bool)
                   @ b1
                   (eta6 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta7 :: [(Defs.PName, Defs.Version, Defs.Version)]
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: [(Defs.PName, Defs.Version, Defs.Version)]
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (Defs.PName, Defs.Version, Defs.Version)
                   @ GHC.Base.String
                   (ParserImpl.bound1 b)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Defs.PName, Defs.Version, Defs.Version)>_R))
                   ParserImpl.bounds2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
a562f9fb3dde5933516ba52f8a5dc6b2
  bounds10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.bounds11) -}
47b0cf3384aef4907f3c334d779f48ec
  bounds11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (","#) -}
1b049f9c1a9e130f3b084bdc089693ca
  bounds2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   ParserImpl.bounds9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
f83d40b41fb4ae4f014814df84e669da
  bounds3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ ()
                   ParserImpl.bounds6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
857cb9022bd1dd496fc62632aea07002
  bounds4 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w2 :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wskipMany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   ParserImpl.bounds5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b
                   w1
                   w2
                   w3
                   w4) -}
561fcf2d37d962f62d68a8b3579b6acb
  bounds5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5 -}
eaf9a9de895da2e8135022d234db5a10
  bounds6 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w2 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wmany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   ParserImpl.bounds7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w1
                   w2
                   w3
                   w4) -}
f91a087b6c970bc477b2cb19aac458ea
  bounds7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta6 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta7 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta9 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   ParserImpl.bounds8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Text.Parsec.Char.space2
                   @ b
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
e74f48364cdb6a74de43f5f0aab7e12a
  bounds8 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isSpace
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
e2d28165c508deea9a6a54e0872d8da7
  bounds9 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.bounds10) -}
964c3c26163b82ded5e28a278c824c12
  braces ::
    Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.braces1
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.Prim.ParsecT
                    GHC.Base.String () Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
e7f0677291779b697f42f04672894ce0
  braces1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (a
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (a
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   (w3 :: Text.Parsec.Prim.ParsecT
                            GHC.Base.String () Data.Functor.Identity.Identity a)
                   @ b
                   (w4 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w5 :: a
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: a
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w8 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wbetween
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Base.String
                   @ GHC.Base.String
                   @ a
                   ParserImpl.braces6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   ParserImpl.braces2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   w3
                   @ b
                   w4
                   w5
                   w6
                   w7
                   w8) -}
1340a2f7b2ba8dd461d75f4e9c38caf4
  braces2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   ParserImpl.braces3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
1838b585e25ab51c07903c6c5fc6cf3e
  braces3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.braces4) -}
ae1f9b1c575962c9a47168a91d3cbbd0
  braces4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.braces5) -}
52bbf6ffe798ef7a20df56b674bd5ec5
  braces5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
f32bee16a4e47739bd08aaf61d8237e9
  braces6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   ParserImpl.braces7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
1e5b59f0e2d66f4b592c251d964af55d
  braces7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.braces8) -}
9be5274e8ca7d4cdf17b94d75e0b1346
  braces8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.braces9) -}
609678995438baccf3ef5a3342c485c0
  braces9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
343eac368ff3ceedb59641b6bef945dd
  checkClauses ::
    [ParserImpl.Clause]
    -> Text.Parsec.String.Parser [ParserImpl.Clause]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (cs2 :: [ParserImpl.Clause]) ->
                 let {
                   ds :: (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
                   = ParserImpl.$wgo
                       cs2
                       ParserImpl.checkClauses17
                       ParserImpl.checkClauses17
                       ParserImpl.checkClauses17
                 } in
                 (Text.Parsec.Prim.$fApplicativeParsecT2
                    @ [GHC.Types.Char]
                    @ ()
                    @ Data.Functor.Identity.Identity
                    @ ()
                    @ [ParserImpl.Clause]
                    (case ds of wild { (,,) n v d ->
                     case n of wild1 { GHC.Types.I# x ->
                     case x of wild2 {
                       DEFAULT
                       -> ParserImpl.checkClauses12
                            `cast`
                          (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                    <GHC.Base.String>_R
                                    <()>_R
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_R))
                       1#
                       -> ParserImpl.checkClauses11
                            `cast`
                          (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                    <[GHC.Types.Char]>_R
                                    <()>_R
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_R)) } } })
                    (Text.Parsec.Prim.$fApplicativeParsecT2
                       @ [GHC.Types.Char]
                       @ ()
                       @ Data.Functor.Identity.Identity
                       @ ()
                       @ [ParserImpl.Clause]
                       (case ds of wild { (,,) n v d ->
                        case v of wild1 { GHC.Types.I# x ->
                        case GHC.Prim.># x 1# of lwild {
                          DEFAULT
                          -> ParserImpl.checkClauses11
                               `cast`
                             (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                       <[GHC.Types.Char]>_R
                                       <()>_R
                                       <Data.Functor.Identity.Identity>_R
                                       <()>_R))
                          1#
                          -> ParserImpl.checkClauses6
                               `cast`
                             (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                       <GHC.Base.String>_R
                                       <()>_R
                                       <Data.Functor.Identity.Identity>_R
                                       <()>_R)) } } })
                       (Text.Parsec.Prim.$fApplicativeParsecT2
                          @ [GHC.Types.Char]
                          @ ()
                          @ Data.Functor.Identity.Identity
                          @ ()
                          @ [ParserImpl.Clause]
                          (case ds of wild { (,,) n v d ->
                           case d of wild1 { GHC.Types.I# x ->
                           case GHC.Prim.># x 1# of lwild {
                             DEFAULT
                             -> ParserImpl.checkClauses11
                                  `cast`
                                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                          <[GHC.Types.Char]>_R
                                          <()>_R
                                          <Data.Functor.Identity.Identity>_R
                                          <()>_R))
                             1#
                             -> ParserImpl.checkClauses1
                                  `cast`
                                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                          <GHC.Base.String>_R
                                          <()>_R
                                          <Data.Functor.Identity.Identity>_R
                                          <()>_R)) } } })
                          (Text.Parsec.Prim.$fApplicativeParsecT5
                             @ [ParserImpl.Clause]
                             @ [GHC.Types.Char]
                             @ ()
                             @ Data.Functor.Identity.Identity
                             cs2)
                            `cast`
                          (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                    <[GHC.Types.Char]>_R
                                    <()>_R
                                    <Data.Functor.Identity.Identity>_R
                                    <[ParserImpl.Clause]>_R)))
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <()>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <[ParserImpl.Clause]>_R)))
                      `cast`
                    (Sym (Text.Parsec.Prim.N:ParsecT[0]
                              <[GHC.Types.Char]>_R
                              <()>_R
                              <Data.Functor.Identity.Identity>_R
                              <[ParserImpl.Clause]>_R)))
                   `cast`
                 (Sym (Text.Parsec.Prim.N:ParsecT[0]
                           <[GHC.Types.Char]>_R
                           <()>_R
                           <Data.Functor.Identity.Identity>_R
                           <[ParserImpl.Clause]>_R))) -}
0cdb5886033958781062e344ce838ad3
  checkClauses1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,1*U(A,U,A)><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 eerr
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError ds4 ParserImpl.checkClauses2 })) -}
d437ebed77f0454204e9fa63f61457fc
  checkClauses10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("number of version clauses (at most 1)"#) -}
0f7a7d7ebb9381209ad9960265f675f3
  checkClauses11 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   GHC.Tuple.()
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
9d1f729ed31c4b5cdc2b2a3be5fb4156
  checkClauses12 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,1*U(A,U,A)><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 eerr
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError ds4 ParserImpl.checkClauses13 })) -}
288de7e204f810418025f6a61689fb67
  checkClauses13 :: [Text.Parsec.Error.Message]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   ParserImpl.checkClauses14
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
9ef5245db0c6f4a96a05cde0f4f7add3
  checkClauses14 :: Text.Parsec.Error.Message
  {- Strictness: m2,
     Unfolding: (Text.Parsec.Error.UnExpect
                   ParserImpl.checkClauses15) -}
6306651d5c41029355f94af3dfdb8a8f
  checkClauses15 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.checkClauses16) -}
faa77f582f03fcfebba8cfd2fec99087
  checkClauses16 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("number of name clauses (exactly 1)"#) -}
4bdd4cc69ec43155134d2fecffc3fcb3
  checkClauses17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
7902201cfc7b11ed067f1c66b0102178
  checkClauses2 :: [Text.Parsec.Error.Message]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   ParserImpl.checkClauses3
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
974df45760cd064df1e5452685789101
  checkClauses3 :: Text.Parsec.Error.Message
  {- Strictness: m2,
     Unfolding: (Text.Parsec.Error.UnExpect ParserImpl.checkClauses4) -}
f7dad9ced14cb13267c403ace9692638
  checkClauses4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.checkClauses5) -}
f775139ac1cf68c3c73fbd1d318b22fe
  checkClauses5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("number of description clauses (at most 1)"#) -}
d9cb2847d8c4ee49bba13192829beca2
  checkClauses6 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,1*U(A,U,A)><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 eerr
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError ds4 ParserImpl.checkClauses7 })) -}
babba3a7feecfef8e035cd1498dc2909
  checkClauses7 :: [Text.Parsec.Error.Message]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   ParserImpl.checkClauses8
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
a2180fd3182163ded412703c5ce818ee
  checkClauses8 :: Text.Parsec.Error.Message
  {- Strictness: m2,
     Unfolding: (Text.Parsec.Error.UnExpect ParserImpl.checkClauses9) -}
4312e9c17dcb91e79a3490ccd7d769c5
  checkClauses9 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.checkClauses10) -}
97927d56b634a8d8e30e2d7eae801230
  checkDeps :: Defs.Pkg -> Text.Parsec.String.Parser Defs.Pkg
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.checkDeps1
                  `cast`
                (<Defs.Pkg>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <Defs.Pkg>_R)) -}
f73e9f1ab6db160eb0c33aa8691aff31
  checkDeps1 ::
    Defs.Pkg
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Defs.Pkg
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Defs.Pkg
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: (\ (pkg :: Defs.Pkg) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Defs.Pkg
                   (case pkg of wild { Defs.Pkg ds4 ds5 ds6 ds7 ->
                    letrec {
                      go1 :: [(Defs.PName, Defs.PConstr)]
                             -> Text.Parsec.Prim.ParsecT
                                  [GHC.Types.Char] () Data.Functor.Identity.Identity ()
                        <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds :: [(Defs.PName, Defs.PConstr)]) ->
                        case ds of wild1 {
                          []
                          -> ParserImpl.checkClauses11
                               `cast`
                             (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                       <[GHC.Types.Char]>_R
                                       <()>_R
                                       <Data.Functor.Identity.Identity>_R
                                       <()>_R))
                          : y ys
                          -> case y of wild2 { (,) p3 ds1 ->
                             case GHC.Base.eqString
                                    p3 `cast` (Defs.N:PName[0])
                                    ds4 `cast` (Defs.N:PName[0]) of wild3 {
                               GHC.Types.False -> go1 ys
                               GHC.Types.True
                               -> ParserImpl.checkDeps2
                                    `cast`
                                  (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                            <GHC.Base.String>_R
                                            <()>_R
                                            <Data.Functor.Identity.Identity>_R
                                            <()>_R)) } } }
                    } in
                    go1 ds7 })
                   (Text.Parsec.Prim.$fApplicativeParsecT5
                      @ Defs.Pkg
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      pkg)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Pkg>_R))) -}
2522f76db2b78c76bd875e2d7944ee4a
  checkDeps2 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,1*U(A,U,A)><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 eerr
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError ds4 ParserImpl.checkDeps3 })) -}
657d09982eaa331ff0ba4d41227994e6
  checkDeps3 :: [Text.Parsec.Error.Message]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   ParserImpl.checkDeps4
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
b993998b971f825af98f6629977597dc
  checkDeps4 :: Text.Parsec.Error.Message
  {- Strictness: m2,
     Unfolding: (Text.Parsec.Error.UnExpect ParserImpl.checkDeps5) -}
388adb4c407a588de7df5c1ac420fba7
  checkDeps5 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.checkDeps6) -}
02c481123c02b1ad6b301d42076d3a67
  checkDeps6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("self-referential dependencies"#) -}
c6699d4c3503afa0ca67002cb838cf01
  clause :: Text.Parsec.String.Parser ParserImpl.Clause
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.clause1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <ParserImpl.Clause>_R)) -}
f87b3708aa4490f73b7e323def292e7d
  clause1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7368b59ded7af47dff46c68275205e68
  cmt :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.bounds5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
8eb0003027cec43e79c2f035a279dc00
  constr :: Text.Parsec.String.Parser Defs.Constrs
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.constr1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Constrs>_R)) -}
ca76b9c0e8a3d2f62f3adff6ecc2ce09
  constr1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Constrs
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Constrs
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1e365ee89bdd4d66cc487a93181ffb7b
  countClause ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
    -> ParserImpl.Clause
    -> (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(U(U),U(U),U(U))><S,1*U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int))
                   (w1 :: ParserImpl.Clause) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 case w1 of wild {
                   ParserImpl.Name ds
                   -> (case ww1 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.+# x 1#) },
                       ww2, ww3)
                   ParserImpl.Version ds
                   -> (ww1,
                       case ww2 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.+# x 1#) },
                       ww3)
                   ParserImpl.Desc ds
                   -> (ww1, ww2,
                       case ww3 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.+# x 1#) })
                   ParserImpl.Constraints ds -> (ww1, ww2, ww3) } }) -}
ba2efc081a8064e8624cd5f823991062
  database :: Text.Parsec.String.Parser Defs.Database
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.database1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Database>_R)) -}
52b8a352460f808348de3e19824d54f3
  database1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Defs.Database
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Defs.Database
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$wmany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Defs.Pkg
                   ParserImpl.database2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Pkg>_R))
                   @ b1
                   s1
                   (\ (x :: [Defs.Pkg]) -> cok x `cast` (Sym (Defs.N:Database[0])))
                   cerr
                   (\ (x :: [Defs.Pkg]) ->
                    eok x `cast` (Sym (Defs.N:Database[0])))) -}
53bdb759fcb484af8e01c67372b5280c
  database10 ::
    GHC.Types.Char
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ([GHC.Types.Char]
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ([GHC.Types.Char]
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 7,
     Strictness: <L,U(U)><L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (x :: GHC.Types.Char)
                   (ys :: Text.Parsec.Prim.ParsecT
                            GHC.Base.String () Data.Functor.Identity.Identity [GHC.Types.Char])
                   @ b
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta9 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fAlternativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   (\ @ b1
                      (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (cok :: ([GHC.Types.Char] -> [GHC.Types.Char])
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot]
                      (cerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b1)[OneShot]
                      (eok :: ([GHC.Types.Char] -> [GHC.Types.Char])
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot]
                      (eerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b1)[OneShot] ->
                    let {
                      n :: Text.Parsec.Prim.ParsecT
                             GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
                      = Text.Parsec.Char.char
                          @ GHC.Base.String
                          @ Data.Functor.Identity.Identity
                          @ ()
                          (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                          (GHC.Unicode.toUpper x)
                    } in
                    let {
                      cok1 :: GHC.Types.Char
                              -> Text.Parsec.Prim.State GHC.Base.String ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1
                        {- Arity: 1, Strictness: <L,U>,
                           Unfolding: InlineRule (1, True, False)
                                      (\ (x1 :: GHC.Types.Char) ->
                                       cok (GHC.Types.: @ GHC.Types.Char x1)) -}
                      = \ (x1 :: GHC.Types.Char) -> cok (GHC.Types.: @ GHC.Types.Char x1)
                    } in
                    (Text.Parsec.Char.char
                       @ GHC.Base.String
                       @ Data.Functor.Identity.Identity
                       @ ()
                       (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                       (GHC.Unicode.toLower x))
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <GHC.Base.String>_R
                         <()>_R
                         <Data.Functor.Identity.Identity>_R
                         <GHC.Types.Char>_R)
                      @ b1
                      s1
                      cok1
                      cerr
                      (\ (x1 :: GHC.Types.Char) -> eok (GHC.Types.: @ GHC.Types.Char x1))
                      (\ (err :: Text.Parsec.Error.ParseError) ->
                       n `cast`
                       (Text.Parsec.Prim.N:ParsecT[0]
                            <GHC.Base.String>_R
                            <()>_R
                            <Data.Functor.Identity.Identity>_R
                            <GHC.Types.Char>_R)
                         @ b1
                         s1
                         cok1
                         cerr
                         (\ (y :: GHC.Types.Char)
                            (s' :: Text.Parsec.Prim.State GHC.Base.String ())
                            (err' :: Text.Parsec.Error.ParseError) ->
                          eok
                            (GHC.Types.: @ GHC.Types.Char y)
                            s'
                            (Text.Parsec.Error.mergeError err err'))
                         (\ (err' :: Text.Parsec.Error.ParseError) ->
                          eerr (Text.Parsec.Error.mergeError err err'))))
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char] -> [GHC.Types.Char]>_R))
                   ys
                   @ b
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
3570c3d20ed2d2d3c23e6605ce24c273
  database11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("package"#) -}
0b3a4d4e43a41ac7b3a287bebd33b189
  database2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ Defs.Pkg
                   ParserImpl.database4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.database3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Pkg>_R))) -}
35b6db10d1eeca4207aed165ebb932ba
  database3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
0e05eb09cc6821f063a398ec04e8e181
  database4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ GHC.Base.String
                   ParserImpl.database8
                   ParserImpl.database5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
45e0595d14c3cfe8d6e7c2c986a7d1e3
  database5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (cok :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 let {
                   lvl24 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError -> Data.Functor.Identity.Identity b
                   = cok (GHC.Types.[] @ GHC.Types.Char)
                 } in
                 let {
                   lvl25 :: ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True) (\ (x1 :: ()) -> lvl24) -}
                   = \ (x1 :: ()) -> lvl24
                 } in
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ ()
                   ParserImpl.database7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.database6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Combinator.$wskipMany1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ GHC.Types.Char
                      @ ()
                      @ GHC.Base.String
                      ParserImpl.bounds5
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <[GHC.Types.Char]>_R))
                      @ b
                      s1
                      lvl25
                      cerr
                      (\ (x1 :: ())
                         (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (eta7 :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok
                         (GHC.Types.[] @ GHC.Types.Char)
                         eta6
                         (Text.Parsec.Error.mergeError err eta7))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
1ed9ec89e5920e8d4c4e0132f87c49e1
  database6 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w2 :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wskipMany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   ParserImpl.bounds5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b
                   w1
                   w2
                   w3
                   w4) -}
c5c0976cafd7ac8d82c65f17ce711000
  database7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   ParserImpl.bounds7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w2
                   w3
                   w4
                   w5
                   w6) -}
f39ebb0f10bb2b6e2f3f38a161ac81c8
  database8 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackFoldrCString#
                   @ (Text.Parsec.Prim.ParsecT
                        GHC.Base.String () Data.Functor.Identity.Identity [GHC.Types.Char])
                   ParserImpl.database11
                   ParserImpl.database10
                     `cast`
                   (<GHC.Types.Char>_R
                    ->_R <Text.Parsec.Prim.ParsecT
                            GHC.Base.String
                            ()
                            Data.Functor.Identity.Identity
                            [GHC.Types.Char]>_R
                    ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                                  <[GHC.Types.Char]>_R
                                  <()>_R
                                  <Data.Functor.Identity.Identity>_R
                                  <[GHC.Types.Char]>_R))
                   ParserImpl.database9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
35e17d014299c6cf30310daa160ae8c8
  database9 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   (GHC.Types.[] @ GHC.Types.Char)
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
fc3a9a827c656d2504211ca4312bcb92
  genAction ::
    ParserImpl.Clause -> Defs.Pkg -> Text.Parsec.String.Parser Defs.Pkg
  {- Arity: 2, Strictness: <S,1*U><L,1*U(U,U,U,U)>,
     Unfolding: (\ (ds :: ParserImpl.Clause) (pkg :: Defs.Pkg) ->
                 case ds of wild {
                   ParserImpl.Name id
                   -> let {
                        x :: Defs.Pkg
                        = case pkg of wild1 { Defs.Pkg ds1 ds2 ds3 ds4 ->
                          Defs.Pkg id ds2 ds3 ds4 }
                      } in
                      (\ @ b
                         (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                         (ds1 :: Defs.Pkg
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (ds2 :: Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (eok :: Defs.Pkg
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (ds3 :: Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b) ->
                       eok
                         x
                         s1
                         (case s1 of wild1 { Text.Parsec.Prim.State ds4 ds5 ds6 ->
                          Text.Parsec.Error.ParseError
                            ds5
                            (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <Defs.Pkg>_R))
                   ParserImpl.Version v
                   -> let {
                        x :: Defs.Pkg
                        = case pkg of wild1 { Defs.Pkg ds1 ds2 ds3 ds4 ->
                          Defs.Pkg ds1 v ds3 ds4 }
                      } in
                      (\ @ b
                         (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                         (ds1 :: Defs.Pkg
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (ds2 :: Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (eok :: Defs.Pkg
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (ds3 :: Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b) ->
                       eok
                         x
                         s1
                         (case s1 of wild1 { Text.Parsec.Prim.State ds4 ds5 ds6 ->
                          Text.Parsec.Error.ParseError
                            ds5
                            (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <Defs.Pkg>_R))
                   ParserImpl.Desc d
                   -> let {
                        x :: Defs.Pkg
                        = case pkg of wild1 { Defs.Pkg ds1 ds2 ds3 ds4 ->
                          Defs.Pkg ds1 ds2 d ds4 }
                      } in
                      (\ @ b
                         (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                         (ds1 :: Defs.Pkg
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (ds2 :: Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (eok :: Defs.Pkg
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b)
                         (ds3 :: Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b) ->
                       eok
                         x
                         s1
                         (case s1 of wild1 { Text.Parsec.Prim.State ds4 ds5 ds6 ->
                          Text.Parsec.Error.ParseError
                            ds5
                            (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <Defs.Pkg>_R))
                   ParserImpl.Constraints cs2
                   -> case pkg of wild1 { Defs.Pkg ds4 ds5 ds6 ds7 ->
                      case Utils.merge ds7 cs2 of wild2 {
                        GHC.Base.Nothing
                        -> ParserImpl.genAction1
                             `cast`
                           (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                     <GHC.Base.String>_R
                                     <()>_R
                                     <Data.Functor.Identity.Identity>_R
                                     <Defs.Pkg>_R))
                        GHC.Base.Just cs'
                        -> let {
                             x :: Defs.Pkg = Defs.Pkg ds4 ds5 ds6 cs'
                           } in
                           (\ @ b
                              (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                              (ds1 :: Defs.Pkg
                                      -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                      -> Text.Parsec.Error.ParseError
                                      -> Data.Functor.Identity.Identity b)
                              (ds2 :: Text.Parsec.Error.ParseError
                                      -> Data.Functor.Identity.Identity b)
                              (eok :: Defs.Pkg
                                      -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                      -> Text.Parsec.Error.ParseError
                                      -> Data.Functor.Identity.Identity b)
                              (ds3 :: Text.Parsec.Error.ParseError
                                      -> Data.Functor.Identity.Identity b) ->
                            eok
                              x
                              s1
                              (case s1 of wild3 { Text.Parsec.Prim.State ds10 ds11 ds12 ->
                               Text.Parsec.Error.ParseError
                                 ds11
                                 (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                             `cast`
                           (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                     <[GHC.Types.Char]>_R
                                     <()>_R
                                     <Data.Functor.Identity.Identity>_R
                                     <Defs.Pkg>_R)) } } }) -}
5f86ed495955150d14f832588ffafb58
  genAction1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,1*U(A,U,A)><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (ds :: Defs.Pkg
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Defs.Pkg
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 eerr
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError ds4 ParserImpl.genAction2 })) -}
12c2c1dadc8ac27791f1622570a6a12c
  genAction2 :: [Text.Parsec.Error.Message]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   ParserImpl.genAction3
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
08f8491748bf8de0fc7f9bfab37181e1
  genAction3 :: Text.Parsec.Error.Message
  {- Strictness: m2,
     Unfolding: (Text.Parsec.Error.UnExpect ParserImpl.genAction4) -}
b0fe93ab0c6631ef015ee28fa868b61f
  genAction4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.genAction5) -}
a39e2955d50c83657d1879a66c78f489
  genAction5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("inconsistence between constraints"#) -}
d55fd193d88a13791702d64c0a765ba4
  keyword ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.keyword1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <[GHC.Types.Char]>_R)) -}
dba14fef740313e9d8f6fcc042c487d1
  keyword1 ::
    [GHC.Types.Char]
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ([GHC.Types.Char]
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ([GHC.Types.Char]
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (x :: [GHC.Types.Char])
                   @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ GHC.Base.String
                   (ParserImpl.keyword2 x)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.database5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
9101c23151afa9803cfd6aa3404c2ad5
  keyword2 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> ([GHC.Types.Char]
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ([GHC.Types.Char]
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <S,1*U><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
1dfc08a12c7d3e858f1bbed7839ee843
  package :: Text.Parsec.String.Parser Defs.Pkg
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.database2
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Pkg>_R)) -}
21d8aa9fbc2ea8f99305230a4aed8fb6
  parens ::
    Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.parens1
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.Prim.ParsecT
                    GHC.Base.String () Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
b09469262172b0c1ae6aa9c4a8e537fb
  parens1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (a
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (a
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   (w3 :: Text.Parsec.Prim.ParsecT
                            GHC.Base.String () Data.Functor.Identity.Identity a)
                   @ b
                   (w4 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w5 :: a
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: a
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w8 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wbetween
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Base.String
                   @ GHC.Base.String
                   @ a
                   ParserImpl.parens6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   ParserImpl.parens2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   w3
                   @ b
                   w4
                   w5
                   w6
                   w7
                   w8) -}
5479085a4600027222dbe7238108789a
  parens2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   ParserImpl.parens3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
8e2dc8d13b54f1efc7e7f1d23903865b
  parens3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.parens4) -}
2076814e8dfb3d2f574e07b00fa829ae
  parens4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.parens5) -}
8f491bc2c54775ba3a6cace1f0828574
  parens5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
489a53175faf16857dc982686faa6d51
  parens6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   ParserImpl.parens7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
a5b209841c158d24e0f175562b5c92cc
  parens7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.parens8) -}
4ad32256b63f0d66606a714feff6571c
  parens8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.parens9) -}
edc2893dbc9511597ee4db47c158fc0f
  parens9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("("#) -}
3bb137b5f1cc33b02a540a37368dd421
  parseDatabase ::
    GHC.Base.String -> Data.Either.Either Defs.ErrMsg Defs.Database
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ Defs.Database
                         (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                         ParserImpl.parseDatabase1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Defs.Database>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         s)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError Defs.Database>_R) of wild {
                   Data.Either.Left e
                   -> Data.Either.Left
                        @ GHC.Base.String
                        @ Defs.Database
                        (Text.Parsec.Error.$fShowParseError_$cshow e)
                   Data.Either.Right v
                   -> Data.Either.Right @ Defs.ErrMsg @ Defs.Database v }) -}
e94a001b4e96354d3def5a18cffc7610
  parseDatabase1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Defs.Database
                   @ ()
                   ParserImpl.parseDatabase3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Database>_R))
                   ParserImpl.parseDatabase2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
855cff6d754fafbfeb676aa30ab250bc
  parseDatabase2 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Combinator.eof1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Show.$fShowChar) -}
223d0c374b6c42c52bfd197949d38cb8
  parseDatabase3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ Defs.Database
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.database1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Database>_R))) -}
4fee649726509531739a0304a899ca37
  parseVersion ::
    GHC.Base.String -> Data.Either.Either Defs.ErrMsg Defs.Version
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ Defs.Version
                         (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                         ParserImpl.parseVersion1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Defs.Version>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         s)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError Defs.Version>_R) of wild {
                   Data.Either.Left e
                   -> Data.Either.Left
                        @ GHC.Base.String
                        @ Defs.Version
                        (Text.Parsec.Error.$fShowParseError_$cshow e)
                   Data.Either.Right v
                   -> Data.Either.Right @ Defs.ErrMsg @ Defs.Version v }) -}
ea1d515b112b25b0de5d5787e58f0b85
  parseVersion1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Defs.Version
                   @ ()
                   ParserImpl.parseVersion2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Version>_R))
                   ParserImpl.parseDatabase2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
dce8085d9183042436bede509ec0bd01
  parseVersion2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ Defs.Version
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.parseVersion3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Version>_R))) -}
7c23d258fce49afad47734b70a2f2a8f
  parseVersion3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Defs.Version
                   @ GHC.Base.String
                   ParserImpl.parseVersion4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Version>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
e5f333603af1aa2f2fc34cd0225d364a
  parseVersion4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Defs.Version
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Defs.Version
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Defs.VNum
                   @ GHC.Types.Char
                   ParserImpl.parseVersion7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.VNum>_R))
                   ParserImpl.parseVersion5
                   @ b1
                   s1
                   (\ (x :: [Defs.VNum]) -> cok x `cast` (Sym (Defs.N:Version[0])))
                   cerr
                   (\ (x :: [Defs.VNum]) -> eok x `cast` (Sym (Defs.N:Version[0])))
                   eerr) -}
1d7f500cd446b4f0f29a9f7e7dcf3a16
  parseVersion5 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.parseVersion6) -}
6fff563fe08f021d43105f44a153efe9
  parseVersion6 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '.'#) -}
669626fea0ad4e3df408ace331b493de
  parseVersion7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.VNum
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.VNum
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
1fba9252469def16b293cd69f78fa93f
  pname :: Text.Parsec.String.Parser Defs.PName
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.pname1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.PName>_R)) -}
de164bd9f579773e8269d4f18202c6d2
  pname' :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.pname'1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
59806a834e6c228b5c1445835c00efc5
  pname'1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 ParserImpl.$wpname' @ b1 w w1 w2 w4) -}
f01642e8414c485c83c4821ea4b24ede
  pname1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.PName
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.PName
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Defs.PName
                   @ GHC.Base.String
                   ParserImpl.pname2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.PName>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
37ce0e1012349f6f39bc673b8faf0a31
  pname2 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (Defs.PName
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.PName
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w1 :: Defs.PName
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Defs.PName
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 ParserImpl.$wpname @ b ww1 ww5 ww6 ww7 ww3 w1 w2 w3 w4 } }) -}
09da2a5e983260cc8339f52c5ab053a3
  quots :: Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.quots1
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.Prim.ParsecT
                    GHC.Base.String () Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
1ed21f27e84f6c18e6c9f386a8844657
  quots1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (a
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (a
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   (w3 :: Text.Parsec.Prim.ParsecT
                            GHC.Base.String () Data.Functor.Identity.Identity a)
                   @ b
                   (w4 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w5 :: a
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: a
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w8 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wbetween
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @ a
                   ParserImpl.quots2
                   ParserImpl.quots2
                   w3
                   @ b
                   w4
                   w5
                   w6
                   w7
                   w8) -}
50d10a0b692d36d7f9908acf82a218be
  quots2 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.quots3) -}
a43055b986c707e94188e7a1295a1290
  quots3 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '"'#) -}
767218c596283a3a4f5451c3e63ddf13
  spaces :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.bounds3
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
d1e7a401e59341ccbf70fc8e2f8608cf
  spaces1 :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.database5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
344c03e4610ae7e6412ec46f5b6249f3
  str :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.str1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
c76a2ed303c50c1b6a434b167828dc35
  str1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ GHC.Base.String
                   ParserImpl.str2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
b4f612b2d43d0a2044e7261f8fb2e468
  str2 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w4 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w5 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w8 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wbetween
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @ [GHC.Types.Char]
                   ParserImpl.quots2
                   ParserImpl.quots2
                   ParserImpl.str3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b
                   w4
                   w5
                   w6
                   w7
                   w8) -}
c5589a49647865fe7b41283358819e23
  str3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 ParserImpl.$wstr @ b1 w w1 w2 w3) -}
5c79ed1c6f47879b7a0f6a7fe59aa602
  str4 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(U)><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w1 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 ParserImpl.$wp @ b ww1 ww5 ww6 ww7 ww3 w1 w3 w4 } }) -}
fd16a9d0b16e03106e0bc8a856c160f3
  str5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.str6) -}
e5ed0b06efff0989e71638a577f80c60
  str6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\"\""#) -}
552ae9a932d5af04050c4e6aee99f41c
  str7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\""#) -}
97e34c33276b2f3c10519a18d0f56a51
  str_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
435dd3be2575809d3c17628d252a5d3e
  str_x :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ParserImpl.str7) -}
93cdc3409a9a8438287b57c6ac01a61b
  suffix :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.suffix1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
978d59da331e72b3a87be82d8cf7469c
  suffix1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
fb2e1e0df779b7d040bfb483fde2c450
  symbol ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.symbol2
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <GHC.Base.String>_R)) -}
5b8adf90fc0e9a2da98b57d960a4a3d2
  symbol1 ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.symbol3
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <GHC.Base.String>_R)) -}
4d6d944129077099974f38448181d375
  symbol2 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ (x :: GHC.Base.String)
                   @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   (Text.Parsec.Char.string1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                      x)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
4c00fabdbbe0558761b1ad8518fe72f6
  symbol3 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ (x :: GHC.Base.String)
                   @ b1
                   (eta6 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta7 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta8 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta9 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta10 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   (Text.Parsec.Char.string1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                      x)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.database5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta6
                   eta7
                   eta8
                   eta9
                   eta10) -}
79193d1274641aadd0ca8306013e71b7
  token :: Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.token2
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.String.Parser a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
6ac384148a84b25d6f84f68a108248b1
  token1 ::
    Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.token3
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.String.Parser a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
04f4e97cdcc90de29079fec20f7fe23d
  token2 ::
    Text.Parsec.String.Parser a
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (p3 :: Text.Parsec.String.Parser a) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ a
                   @ GHC.Base.String
                   p3
                   ParserImpl.bounds3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
f1b20e659f31372d43f3de543df3e3bb
  token3 ::
    Text.Parsec.String.Parser a
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (p3 :: Text.Parsec.String.Parser a) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ a
                   @ GHC.Base.String
                   p3
                   ParserImpl.database5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
ba4fbc7ab768e5281638210624952b8e
  version :: Text.Parsec.String.Parser Defs.Version
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.parseVersion3
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Version>_R)) -}
d195c7f458b4b5a74e0c233e0406ade2
  vnum :: Text.Parsec.String.Parser Defs.VNum
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.parseVersion7
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.VNum>_R)) -}
"SPEC/ParserImpl $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                              (v :: GHC.Base.Monad
                                                                      Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = ParserImpl.$s$fStream[]mtok @ tok
"SPEC/ParserImpl $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = ParserImpl.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

