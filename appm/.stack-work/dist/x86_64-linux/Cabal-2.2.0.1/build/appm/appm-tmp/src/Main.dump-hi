
==================== FINAL INTERFACE ====================
2018-11-05 09:10:42.259797077 UTC

interface main:Main 8043
  interface hash: 9dfd6e7a0c212da60032876954f2cd6e
  ABI hash: b8b1ac7a8f40d471ed93732e19da585a
  export-list hash: 2ab04c880756aed8418ae19fde92202d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d219d13c475a806896c6dbe977c4d1f6
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.check
  Main.doError
  Main.main
  Main.prettyVersion
module dependencies: Defs Parser ParserImpl Solver SolverImpl Utils
package dependencies: array-0.5.2.0 base-4.11.1.0* binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0
                      text-1.2.3.0 transformers-0.5.5.0
orphans: text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 7fdede11f96719870569cb0da1adac2f
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Defs d68c6b51a0680ceeccb798bbdf84422d
  exports: 5ff9e865f120cee4a14d24bffcee71a0
  P 3b8a4dd02ce9b005a82194f2bda4ad98
  V dd84a0012c2a5b84d62583b937630e69
  VN f7cf0c87bc1dda4e1a385fad45561518
  Version dac81863e92b466ccdd232182575e76a
import  -/  Parser 953c749a2c672137aba76db2351a8ae2
  exports: bf652c2449c0896cdfda1e4b5f3ea97a
import  -/  ParserImpl cdda3b3c1aea4bce55183a130a93b533
  parseDatabase 3bb137b5f1cc33b02a540a37368dd421
import  -/  Solver 4f06da1f31edc523bb8e4d59ff176728
  exports: 6c6d583e0390164ce399cdd787be0ef2
import  -/  SolverImpl d60cb30c5dfe2625054519f10dcc8a03
  install 8c49ec1c38e56b1cad3a106a02da6db6
  normalize 26ab16b2d5804f267418afa8d6404a05
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
e615cafa3211c1f133810aa5dc1f6b71
  check ::
    GHC.Base.String
    -> Data.Either.Either GHC.Base.String a -> GHC.Types.IO a
  {- Arity: 3, Strictness: <L,1*U><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.check1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R <Data.Either.Either GHC.Base.String a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
5ec75aa8410d019f629fe0b11610de8f
  check1 ::
    GHC.Base.String
    -> Data.Either.Either GHC.Base.String a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,1*U><S,1*U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (s :: GHC.Base.String)
                   (ds :: Data.Either.Either GHC.Base.String a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild {
                   Data.Either.Left e
                   -> case Main.check2 @ a e s
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                      of {}
                   Data.Either.Right a1 -> (# eta, a1 #) }) -}
28c9530a351c7b8ab89c4f809fbadb7c
  check2 :: GHC.Base.String -> GHC.Base.String -> GHC.Types.IO a
  {- Arity: 2, Strictness: <B,U><B,1*U>x -}
907dcb8efa472be5eea2b6faf1a68762
  doError :: [GHC.Types.Char] -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.doError1
                  `cast`
                (<[GHC.Types.Char]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6d77e4e005b8822eb917a67f203717bc
  doError1 ::
    [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: [GHC.Types.Char]) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.CString.unpackAppendCString# Main.doError2 s)
                   GHC.Types.True) -}
c4e74c5a4cd30fa8bad479f264296a6d
  doError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Error: "#) -}
b4f9ae97a091b232a88173a93240314d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
529073e95d7e97cca9b9c5c633464b51
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
2ae627898cff160a4ab35ad5461925fa
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
5cf0750ad52b537a682350c237466967
  prettyVersion :: Defs.Version -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Defs.Version) ->
                 case Main.prettyVersion_go ds `cast` (Defs.N:Version[0]) of wild {
                   [] -> GHC.Types.[] @ GHC.Types.Char
                   : x xs1
                   -> Data.OldList.intercalate_$spoly_go
                        @ GHC.Types.Char
                        x
                        (Data.OldList.prependToAll
                           @ [GHC.Types.Char]
                           Main.prettyVersion1
                           xs1) }) -}
0e63216c5cfebe1291b67e8ad9f535ef
  prettyVersion1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.prettyVersion2) -}
3323077038499029b67002fad99b0f14
  prettyVersion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("."#) -}
ae5d04ac6ec5a301e10a7cd3e058d309
  prettyVersion_go :: [Defs.VNum] -> [[GHC.Types.Char]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

