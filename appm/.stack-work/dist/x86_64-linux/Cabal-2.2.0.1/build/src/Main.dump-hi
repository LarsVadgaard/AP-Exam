
==================== FINAL INTERFACE ====================
2018-11-05 09:10:41.288753871 UTC

interface appm-0.0.0-bBoXP3Z3yF8cAWvQVfHOK:Main 8043
  interface hash: 51c9c7b485a64b7b08f96df549328fd0
  ABI hash: e507d85c983a254e2cec3729b90a222f
  export-list hash: 9ee328ae41347ffdf4156e6d5a6e84f4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1f596daf84c7527444ae092b33472386
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.check
  Main.doError
  Main.main
  Main.prettyVersion
module dependencies: Defs Parser ParserImpl Solver SolverImpl Utils
package dependencies: array-0.5.2.0 base-4.11.1.0* binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0
                      text-1.2.3.0 transformers-0.5.5.0
orphans: text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  Defs 33704ed0d96c186bd2b1ffcf2d3c5e21
  exports: d483d9f9fac845ad0d3d1b6b82a00958
  P b9f50d258a9c998ff51ee3b44f919c27
  V d6065252bbcc9d01bc33e986c21bca8c
  VN 3de8568add4dc22a406123e5e2e22550
  Version 3329419535fec99edec0e43ff47f12ba
import  -/  Parser c0cd3821ee7fbd8174e6013070c81905
  exports: 3fb335f5e93c9320864b78986bc9f48a
import  -/  ParserImpl d159ed4a8f7f6d29f10223fbf36c17cc
  parseDatabase 1fd785a2ed29b3d174452104ab444834
import  -/  Solver b1272b863643bca228023a2cfc5165eb
  exports: f063ac6cffbb17093b7bcbac7f3189c0
import  -/  SolverImpl 37041eaf1b368993062e4573a24ebe9f
  install 583827623afc00e852db93b7de6d8652
  normalize 6773ef2baab4c45b930d2b51eb0ced37
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 7fdede11f96719870569cb0da1adac2f
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
4af4661bd79981a5442273f3b52ca2d2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
52831232e281a2c82c933355efb14e95
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
4b9c9a12acb5291663d1f39d0133ce6f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
0862ed0dd34b22ab3c4ad7adbab43eda
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
fda7fc13db0a5952c9ed2b9bbdd5a1c5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("appm-0.0.0-bBoXP3Z3yF8cAWvQVfHOK"#) -}
fc2612dcc1c759d1c81a53b3756c6151
  check ::
    GHC.Base.String
    -> Data.Either.Either GHC.Base.String a -> GHC.Types.IO a
  {- Arity: 3, Strictness: <L,1*U><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.check1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R <Data.Either.Either GHC.Base.String a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
e162ec0811247d6527a4d16be13061e5
  check1 ::
    GHC.Base.String
    -> Data.Either.Either GHC.Base.String a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,1*U><S,1*U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (s :: GHC.Base.String)
                   (ds :: Data.Either.Either GHC.Base.String a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild {
                   Data.Either.Left e
                   -> case Main.check2 @ a e s
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                      of {}
                   Data.Either.Right a1 -> (# eta, a1 #) }) -}
427be838aaa41d9c8c0112a0767cb0d9
  check2 :: GHC.Base.String -> GHC.Base.String -> GHC.Types.IO a
  {- Arity: 2, Strictness: <B,U><B,1*U>x -}
d5fa6c89ff8e1a11a22cf66e27c65ba4
  doError :: [GHC.Types.Char] -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.doError1
                  `cast`
                (<[GHC.Types.Char]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d17bd3b4158c1b0e15edc645feef7a8c
  doError1 ::
    [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: [GHC.Types.Char]) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.CString.unpackAppendCString# Main.doError2 s)
                   GHC.Types.True) -}
77efd04b4058ed4671b7869079236d25
  doError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Error: "#) -}
e8e98212c1b8034c3d8f8df68b1e6450
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
3bf0f1a467606de6c4e51ece31ab2982
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
ff2301ec10d35c618b6bc3e12638e8ac
  prettyVersion :: Defs.Version -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Defs.Version) ->
                 case Main.prettyVersion_go ds `cast` (Defs.N:Version[0]) of wild {
                   [] -> GHC.Types.[] @ GHC.Types.Char
                   : x xs1
                   -> Data.OldList.intercalate_$spoly_go
                        @ GHC.Types.Char
                        x
                        (Data.OldList.prependToAll
                           @ [GHC.Types.Char]
                           Main.prettyVersion1
                           xs1) }) -}
3bf4a2161dd89dc7c3c4ff5ca7b4f75a
  prettyVersion1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.prettyVersion2) -}
e2f277d5cd77d3a4a78bda920b89a1c2
  prettyVersion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("."#) -}
08bceba9b0709304e6b74f468fd1d301
  prettyVersion_go :: [Defs.VNum] -> [[GHC.Types.Char]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

